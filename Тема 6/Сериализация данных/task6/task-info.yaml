type: output
files:
- name: __init__.py
  visible: false
  learner_created: false
- name: input.json
  visible: true
  learner_created: false
- name: tests/output.txt
  visible: false
  text: |
    1418
  learner_created: false
- name: main.py
  visible: true
  placeholders:
  - offset: 64
    length: 41
    placeholder_text: '...  # TODO считать содержимое JSON файла'
    initial_state:
      length: 41
      offset: 64
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      with open(FILENAME) as f:
              json_data = json.load(f)
  - offset: 111
    length: 77
    placeholder_text: '...  # TODO просуммировать все значения по ключу contains_improvement_appeals'
    initial_state:
      length: 77
      offset: 111
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      list_values = [item["contains_improvement_appeals"] for item in json_data]
          return sum(list_values)
  text: |
    import json


    FILENAME = "input.json"


    def task() -> dict:
        ...  # TODO считать содержимое JSON файла

        ...  # TODO просуммировать все значения по ключу contains_improvement_appeals


    print(task())
  learner_created: false
status: Unchecked
record: -1
