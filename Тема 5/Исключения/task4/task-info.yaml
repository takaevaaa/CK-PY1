type: output
files:
- name: main.py
  visible: true
  placeholders:
  - offset: 0
    length: 52
    placeholder_text: |-
      # TODO написать функцию remove
      def remove():
          ...
    initial_state:
      length: 52
      offset: 0
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      from typing import Any


      def remove(list_: list, value: Any) -> list:
          for i, current_value in enumerate(list_):
              if current_value == value:
                  return list_[:i] + list_[i+1:]

          raise ValueError("Значение не найдено")
  text: |
    # TODO написать функцию remove
    def remove():
        ...


    print(remove([0, 0, 1, 2], 0))  # [0, 1]
    print(remove([0, 1, 1, 2, 3], 1))  # [0, 1, 2]
    print(remove([0, 1, 2, 3, 4], 4))  # [0, 1, 2, 3]
  learner_created: false
- name: __init__.py
  visible: true
  learner_created: false
- name: tests/output.txt
  visible: true
  text: |
    [0, 1, 2]
    [0, 1, 2, 3]
    [0, 1, 2, 3]
  learner_created: false
status: Unchecked
record: -1
